{"version":3,"file":"static/js/971.abdc7b1a.chunk.js","mappings":"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","sources":["modules/RegisterForm/initialState.js","modules/RegisterForm/fields.js","modules/RegisterForm/RegisterForm.styled.js","modules/RegisterForm/RegisterForm.jsx","pages/RegisterPage/RegisterPage.styled.js","pages/RegisterPage/RegisterPage.jsx","shared/components/Buttons/ButtonSubmit.jsx","shared/components/Section/Section.styled.js","shared/components/Section/Section.jsx","shared/components/TextField/TextField.styled.js","shared/components/TextField/TextField.jsx","shared/hooks/useForm.js","../node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../node_modules/nanoid/index.browser.js"],"sourcesContent":["const initialState = {\n  name: '',\n  email: '',\n  password: '',\n};\n\nexport default initialState;\n","const fields = {\n  name: {\n    type: 'text',\n    name: 'name',\n    required: true,\n    label: 'User name',\n    placeholder: 'User name',\n  },\n  email: {\n    type: 'email',\n    name: 'email',\n    required: true,\n    label: 'User email',\n    placeholder: 'User email',\n  },\n  password: {\n    type: 'password',\n    name: 'password',\n    required: true,\n    label: 'User password',\n    placeholder: 'User password',\n  },\n};\n\nexport default fields;\n","import styled from 'styled-components';\n\nexport const Form = styled.form`\n  margin-right: auto;\n  margin-left: auto;\n  max-width: 360px;\n  padding-right: 30px;\n  padding-left: 30px;\n  padding-top: 40px;\n  padding-bottom: 40px;\n  border-radius: 30px;\n  background-color: #153e49;\n`;\n","import { useDispatch } from 'react-redux';\nimport { signup } from '../../redux/auth/auth-operations';\nimport useForm from 'shared/hooks/useForm';\nimport initialState from './initialState';\nimport TextField from 'shared/components/TextField/TextField';\nimport fields from './fields';\nimport ButtonSubmit from 'shared/components/Buttons/ButtonSubmit';\nimport { Form } from './RegisterForm.styled';\n\nconst RegisterForm = () => {\n  const dispatch = useDispatch();\n  const onSubmit = data => {\n    dispatch(signup(data));\n  };\n\n  const { state, handleChange, handleSubmit } = useForm({\n    initialState,\n    onSubmit,\n  });\n  const { name, email, password } = state;\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <TextField value={name} handleChange={handleChange} {...fields.name} />\n      <TextField value={email} handleChange={handleChange} {...fields.email} />\n      <TextField\n        value={password}\n        handleChange={handleChange}\n        {...fields.password}\n      />\n      <ButtonSubmit type=\"submit\">Register</ButtonSubmit>\n    </Form>\n  );\n};\n\nexport default RegisterForm;\n","import styled from 'styled-components';\n\nexport const ManeBox = styled.div`\n  padding-top: 20px;\n  padding-bottom: 60px;\n  background-color: #051e1e;\n  width: 100vw;\n`;\n","import Section from 'shared/components/Section/Section';\nimport RegisterForm from 'modules/RegisterForm/RegisterForm';\nimport { ManeBox } from './RegisterPage.styled';\n\nconst RegisterPage = () => {\n  return (\n    <ManeBox>\n      <Section title=\"Register Page\">\n        <RegisterForm />\n      </Section>\n    </ManeBox>\n  );\n};\n\nexport default RegisterPage;\n","import PropTypes from 'prop-types';\nimport { BtnSubmit } from './Button.styled.js';\n\nconst ButtonSubmit = ({ children, type, onSubmit }) => {\n  return (\n    <BtnSubmit onSubmit={onSubmit} type={type}>\n      {children}\n    </BtnSubmit>\n  );\n};\n\nexport default ButtonSubmit;\n\nButtonSubmit.propTypes = {\n  children: PropTypes.elementType.isRequired,\n  type: PropTypes.oneOf(['submit', 'button', 'reset']).isRequired,\n  onSubmit: PropTypes.func,\n};\n","import styled from 'styled-components';\n\nexport const ManeSection = styled.section`\n  width: 100vw;\n  padding-left: 15px;\n  padding-right: 15px;\n  padding-top: 20px;\n  margin: auto;\n  border: none;\n`;\n\nexport const Title = styled.h2`\n  font-size: 30px;\n  font-weight: 400;\n  margin-bottom: 40px;\n  padding-top: 20px;\n  text-align: center;\n  color: #ffe0bd;\n`;\n","import PropTypes from 'prop-types';\nimport { ManeSection, Title } from './Section.styled.js';\n\nfunction Section({ title, children }) {\n  return (\n    <ManeSection>\n      {title && <Title>{title}</Title>}\n      {children}\n    </ManeSection>\n  );\n}\n\nexport default Section;\n\nSection.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.any,\n};\n","import styled from 'styled-components';\n\nexport const Input = styled.input`\n  display: block;\n  font-size: 16px;\n  font-weight: 500;\n  color: #051e1e;\n  margin-top: 20px;\n  margin-bottom: 40px;\n  padding: 6px 20px;\n  border-radius: 30px;\n  border: 0;\n  height: 50px;\n  width: 100%;\n  outline: none;\n  background-color: #ffe0bd;\n`;\n\nexport const Label = styled.label`\n  display: block;\n  font-size: 18px;\n  font-weight: 400;\n  color: #fff;\n`;\n","import { useMemo } from 'react';\nimport PropTypes from 'prop-types';\nimport { nanoid } from 'nanoid';\nimport { Input, Label } from './TextField.styled';\n\nconst TextField = ({ label, handleChange, ...props }) => {\n  const id = useMemo(() => nanoid(), []);\n\n  return (\n    <div>\n      <Label htmlFor={id}>{label}</Label>\n      <Input id={id} onChange={handleChange} {...props} />\n    </div>\n  );\n};\n\nexport default TextField;\n\nTextField.propTypes = {\n  label: PropTypes.string.isRequired,\n  handleChange: PropTypes.func.isRequired,\n  props: PropTypes.any,\n};\n","import { useState } from 'react';\n\nconst useForm = ({ initialState, onSubmit }) => {\n  const [state, setState] = useState({ ...initialState });\n\n  const handleChange = ({ target }) => {\n    setState(prevState => {\n      const { name, value, checked, type } = target;\n      const newValue = type === 'checkbox' ? checked : value;\n      return { ...prevState, [name]: newValue };\n    });\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    onSubmit({ ...state });\n    setState({ ...initialState });\n  };\n\n  return { state, setState, handleChange, handleSubmit };\n};\n\nexport default useForm;\n","import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose.js\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}","import { urlAlphabet } from './url-alphabet/index.js'\nlet random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nlet customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nlet customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nlet nanoid = (size = 21) => {\n  let id = ''\n  let bytes = crypto.getRandomValues(new Uint8Array(size))\n  while (size--) {\n    let byte = bytes[size] & 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte < 63) {\n      id += '_'\n    } else {\n      id += '-'\n    }\n  }\n  return id\n}\nexport { nanoid, customAlphabet, customRandom, urlAlphabet, random }\n"],"names":["name","email","password","type","required","label","placeholder","Form","styled","dispatch","useDispatch","useForm","initialState","onSubmit","data","signup","state","handleChange","handleSubmit","TextField","value","fields","ButtonSubmit","ManeBox","Section","title","children","ManeSection","Title","Input","Label","props","id","useMemo","nanoid","htmlFor","onChange","useState","setState","target","prevState","checked","newValue","e","preventDefault","_objectWithoutProperties","source","excluded","key","i","Object","getOwnPropertySymbols","sourceSymbolKeys","length","indexOf","prototype","propertyIsEnumerable","call","size","bytes","crypto","getRandomValues","Uint8Array","byte","toString","toUpperCase"],"sourceRoot":""}