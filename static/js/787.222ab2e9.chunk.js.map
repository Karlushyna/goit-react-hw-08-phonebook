{"version":3,"file":"static/js/787.222ab2e9.chunk.js","mappings":"0OAKA,EALqB,CACnBA,KAAM,GACNC,OAAQ,ICFGC,EAAiB,SAAC,GAAD,SAAGC,SAAwBC,KAA3B,EAEjBC,EAAsB,SAAC,GAA0B,IAAxBF,EAAuB,EAAvBA,SAAUG,EAAa,EAAbA,OAC9C,IAAKA,EACH,OAAOH,EAASC,MAGlB,IAAMG,EAAmBD,EAAOE,cAChC,OAAOL,EAASC,MAAME,QAAO,SAAAG,GAAO,OAClCA,EAAQT,KAAKQ,cAAcE,SAASH,EADF,GAGrC,EAEYI,EAAmB,SAAC,GAC/B,OADgD,EAAfR,SACjBS,OACjB,E,SCdD,EAAuB,4BAAvB,EAA4D,8B,UCoE5D,EA7DqB,WACnB,OAA0BC,EAAAA,EAAAA,WAAS,UAAKC,IAAxC,eAAOC,EAAP,KAAcC,EAAd,KACMC,GAAcC,EAAAA,EAAAA,IAAYhB,GAC1BiB,GAAWC,EAAAA,EAAAA,MAEXC,EAAe,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACdtB,EAAgBsB,EAAhBtB,KACFuB,EADkBD,EAAVE,MAEdR,GAAS,SAAAS,GACP,OAAO,kBAAKA,GAAZ,cAAwBzB,EAAOuB,GAChC,GACF,EAuBOvB,EAAiBe,EAAjBf,KAAMC,EAAWc,EAAXd,OACd,OACE,kBAAMyB,SARa,SAAAC,GACnBA,EAAEC,iBAhBqB,SAAC,GAAsB,IAApB5B,EAAmB,EAAnBA,KAAMC,EAAa,EAAbA,OAC1B4B,EAAkB7B,EAAKQ,cAE7B,GACES,EAAYa,MACV,SAAArB,GAAO,OAAIA,EAAQT,KAAKQ,gBAAkBqB,CAAnC,IAIT,OADAE,MAAM,GAAD,OAAI/B,EAAJ,6BACE,EAGTmB,GAASa,EAAAA,EAAAA,IAAW,CAAEhC,KAAAA,EAAMC,OAAAA,IAC7B,CAICgC,EAAiB,UAAKlB,IACtBC,GAAS,UAAKF,GACf,EAI+BoB,UAAWC,EAAzC,WACE,kBACEX,MAAOxB,EACPoC,SAAUf,EACVgB,KAAK,OACLrC,KAAK,OACLsC,QAAQ,yHACRC,MAAM,yIACNC,UAAQ,KAEV,kBACEhB,MAAOvB,EACPmC,SAAUf,EACVgB,KAAK,MACLrC,KAAK,SACLsC,QAAQ,yFACRC,MAAM,+FACNC,UAAQ,KAEV,mBAAQH,KAAK,SAASH,UAAWC,EAAjC,2BAKL,ECnED,EAAuB,2BAAvB,EAAyD,2BAAzD,EAA6F,6BAA7F,EAAsI,gCCiCtI,EA5BoB,SAAC,GAA0B,IAAxBM,EAAuB,EAAvBA,GAAIzC,EAAmB,EAAnBA,KAAMC,EAAa,EAAbA,OACzBkB,GAAWC,EAAAA,EAAAA,MAMjB,OACE,gBAAIc,UAAWC,EAAf,WACE,eAAGD,UAAWC,EAAd,UAA4BnC,EAA5B,QACA,cAAGkC,UAAWC,EAAd,SAA8BlC,KAC9B,mBACEoC,KAAK,SACLH,UAAWC,EACXO,QAAS,kBAXa,SAAAD,GAC1BtB,GAASwB,EAAAA,EAAAA,IAAcF,GACxB,CASoBG,CAAoBH,EAA1B,EAHX,sBASL,ECzBD,EAAuB,2BC+BvB,EAxBoB,WAClB,IAAMI,GAAmB3B,EAAAA,EAAAA,IAAYb,GAC/Bc,GAAWC,EAAAA,EAAAA,OAEjB0B,EAAAA,EAAAA,YAAU,WACR3B,GAAS4B,EAAAA,EAAAA,MACV,GAAE,CAAC5B,IAEJ,IAAM6B,EAAaC,QAAQJ,EAAiBK,QAE5C,OACE,2BACGF,IACC,eAAId,UAAWC,EAAf,SACGU,EAAiBM,KAAI,gBAAGV,EAAH,EAAGA,GAAIzC,EAAP,EAAOA,KAAMC,EAAb,EAAaA,OAAb,OACpB,SAAC,EAAD,CAAsBwC,GAAIA,EAAIzC,KAAMA,EAAMC,OAAQA,GAAhCwC,EADE,OAKxBO,IAAc,sDAGrB,E,UC9BYI,EAAY,SAAC,GAAD,SAAG9C,MAAH,ECCzB,EAA0B,iCAA1B,EAAmE,+BCsBnE,EAlBuB,WACrB,IAAMA,GAASY,EAAAA,EAAAA,IAAYkC,GACrBjC,GAAWC,EAAAA,EAAAA,MAMjB,OACE,iBAAKc,UAAWC,EAAhB,WACE,kBAAOD,UAAWC,EAAckB,QAAQ,SAAxC,oCAGA,kBAAOhB,KAAK,OAAOrC,KAAK,SAASwB,MAAOlB,EAAQ8B,SAT/B,SAAC,GAAgB,IAAdd,EAAa,EAAbA,OACtBH,GAASmC,EAAAA,EAAAA,GAAUhC,EAAOE,OAC3B,MAUF,E,UCpBD,EAAyB,uBCGZ+B,EAAS,kBACpB,gBAAKrB,UAAWC,EAAhB,UACE,SAAC,KAAD,CACEqB,SAAS,EACTC,OAAO,KACPC,MAAM,KACNC,UAAU,cACVC,aAAc,CAAC,EACfC,aAAa,iBARG,ECoBtB,EAfmB,WACjB,IAAMC,GAAgB5C,EAAAA,EAAAA,IAAYP,GAElC,OACE,4BACE,uCACA,SAAC,EAAD,KACA,sCACA,SAAC,EAAD,IACCmD,IAAiB,SAACP,EAAD,KAClB,SAAC,EAAD,MAGL,ECZD,EARoB,WAClB,OACE,0BACE,SAAC,EAAD,KAGL,C","sources":["components/MyContacts/ContactsForm/initialState.js","redux/contacts/selectors.js","webpack://react-homework-template/./src/components/MyContacts/ContactsForm/contacts-form.module.css?305c","components/MyContacts/ContactsForm/ContactsForm.jsx","webpack://react-homework-template/./src/components/MyContacts/ContactList/ContactItem/contact-item.module.css?afda","components/MyContacts/ContactList/ContactItem/ContactItem.jsx","webpack://react-homework-template/./src/components/MyContacts/ContactList/contact-list.module.css?4c3b","components/MyContacts/ContactList/ContactList.jsx","redux/filter/selectors.js","webpack://react-homework-template/./src/components/MyContacts/ContactsFilter/contacts-filter.module.css?2820","components/MyContacts/ContactsFilter/ContactsFilter.jsx","webpack://react-homework-template/./src/components/Loader/loader.module.css?1600","components/Loader/Loader.jsx","components/MyContacts/MyContacts.jsx","pages/Contacts/Contacts.jsx"],"sourcesContent":["const initialState = {\n  name: '',\n  number: '',\n};\n\nexport default initialState;\n","export const getAllContacts = ({ contacts }) => contacts.items;\n\nexport const getFilteredContacts = ({ contacts, filter }) => {\n  if (!filter) {\n    return contacts.items;\n  }\n\n  const normalizedFilter = filter.toLowerCase();\n  return contacts.items.filter(contact =>\n    contact.name.toLowerCase().includes(normalizedFilter)\n  );\n};\n\nexport const getLoadingStatus = ({ contacts }) => {\n  return contacts.loading;\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"contacts-form_form__kSuGg\",\"button\":\"contacts-form_button__I2XdC\"};","import React, { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport initialState from './initialState';\nimport { getAllContacts } from 'redux/contacts/selectors';\nimport { addContact } from 'redux/contacts/operations';\n\nimport styles from './contacts-form.module.css';\n\nconst ContactsForm = () => {\n  const [state, setState] = useState({ ...initialState });\n  const allContacts = useSelector(getAllContacts);\n  const dispatch = useDispatch();\n\n  const handleChange = ({ target }) => {\n    const { name, value } = target;\n    const newValue = value;\n    setState(prevState => {\n      return { ...prevState, [name]: newValue };\n    });\n  };\n\n  const handleAddContact = ({ name, number }) => {\n    const normalaizedName = name.toLowerCase();\n\n    if (\n      allContacts.find(\n        contact => contact.name.toLowerCase() === normalaizedName\n      )\n    ) {\n      alert(`${name} is already in contacts`);\n      return false;\n    }\n\n    dispatch(addContact({ name, number }));\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    handleAddContact({ ...state });\n    setState({ ...initialState });\n  };\n\n  const { name, number } = state;\n  return (\n    <form onSubmit={handleSubmit} className={styles.form}>\n      <input\n        value={name}\n        onChange={handleChange}\n        type=\"text\"\n        name=\"name\"\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        required\n      />\n      <input\n        value={number}\n        onChange={handleChange}\n        type=\"tel\"\n        name=\"number\"\n        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n        title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n        required\n      />\n      <button type=\"submit\" className={styles.button}>\n        Add contact\n      </button>\n    </form>\n  );\n};\nexport default ContactsForm;\n","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"contact-item_item__nhpMx\",\"name\":\"contact-item_name__VFr8f\",\"number\":\"contact-item_number__bJ-Xz\",\"deleteBtn\":\"contact-item_deleteBtn__S62za\"};","import PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\nimport { deleteContact } from 'redux/contacts/operations';\n\nimport styles from './contact-item.module.css';\n\nconst ContactItem = ({ id, name, number }) => {\n  const dispatch = useDispatch();\n\n  const handleDeleteContact = id => {\n    dispatch(deleteContact(id));\n  };\n\n  return (\n    <li className={styles.item}>\n      <p className={styles.name}>{name}:</p>\n      <p className={styles.number}>{number}</p>\n      <button\n        type=\"button\"\n        className={styles.deleteBtn}\n        onClick={() => handleDeleteContact(id)}\n      >\n        Delete\n      </button>\n    </li>\n  );\n};\n\nContactItem.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n};\n\nexport default ContactItem;\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"contact-list_list__9tzwn\"};","import { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport ContactItem from './ContactItem/ContactItem';\nimport { getFilteredContacts } from 'redux/contacts/selectors';\n\nimport styles from './contact-list.module.css';\n\nconst ContactList = () => {\n  const filteredContacts = useSelector(getFilteredContacts);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const inContacts = Boolean(filteredContacts.length);\n\n  return (\n    <div>\n      {inContacts && (\n        <ul className={styles.list}>\n          {filteredContacts.map(({ id, name, number }) => (\n            <ContactItem key={id} id={id} name={name} number={number} />\n          ))}\n        </ul>\n      )}\n      {!inContacts && <p>No contacts in list, yet</p>}\n    </div>\n  );\n};\n\nexport default ContactList;\n","export const getFilter = ({ filter }) => filter;\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"contacts-filter_wrapper__-K2Ru\",\"label\":\"contacts-filter_label__cmVXR\"};","import { useSelector, useDispatch } from 'react-redux';\nimport { setFilter } from 'redux/filter/slice';\nimport { getFilter } from 'redux/filter/selectors';\nimport styles from './contacts-filter.module.css';\n\nconst ContactsFilter = () => {\n  const filter = useSelector(getFilter);\n  const dispatch = useDispatch();\n\n  const handleFilter = ({ target }) => {\n    dispatch(setFilter(target.value));\n  };\n\n  return (\n    <div className={styles.wrapper}>\n      <label className={styles.label} htmlFor=\"filter\">\n        Find contacts by name\n      </label>\n      <input type=\"text\" name=\"filter\" value={filter} onChange={handleFilter} />\n    </div>\n  );\n};\n\nexport default ContactsFilter;\n","// extracted by mini-css-extract-plugin\nexport default {\"loader\":\"loader_loader__1AOoV\"};","import { Dna } from 'react-loader-spinner';\n\nimport styles from './loader.module.css';\n\nexport const Loader = () => (\n  <div className={styles.loader}>\n    <Dna\n      visible={true}\n      height=\"80\"\n      width=\"80\"\n      ariaLabel=\"dna-loading\"\n      wrapperStyle={{}}\n      wrapperClass=\"dna-wrapper\"\n    />\n  </div>\n);\n","import ContactsForm from './ContactsForm/ContactsForm';\nimport ContactList from './ContactList/ContactList';\nimport ContactsFilter from './ContactsFilter/ContactsFilter';\nimport { useSelector } from 'react-redux';\nimport { Loader } from 'components/Loader/Loader';\nimport { getLoadingStatus } from 'redux/contacts/selectors';\n\n\n\nconst MyContacts = () => {\n  const loadingStatus = useSelector(getLoadingStatus);\n\n  return (\n    <div>\n      <h1>Phonebook</h1>\n      <ContactsForm />\n      <h2>Contacts</h2>\n      <ContactsFilter />\n      {loadingStatus && <Loader />}\n      <ContactList />\n    </div>\n  );\n};\n\nexport default MyContacts;\n","import MyContacts from 'components/MyContacts/MyContacts';\n\nconst MyBooksPage = () => {\n  return (\n    <div>\n      <MyContacts />\n    </div>\n  );\n};\n\nexport default MyBooksPage;\n"],"names":["name","number","getAllContacts","contacts","items","getFilteredContacts","filter","normalizedFilter","toLowerCase","contact","includes","getLoadingStatus","loading","useState","initialState","state","setState","allContacts","useSelector","dispatch","useDispatch","handleChange","target","newValue","value","prevState","onSubmit","e","preventDefault","normalaizedName","find","alert","addContact","handleAddContact","className","styles","onChange","type","pattern","title","required","id","onClick","deleteContact","handleDeleteContact","filteredContacts","useEffect","fetchContacts","inContacts","Boolean","length","map","getFilter","htmlFor","setFilter","Loader","visible","height","width","ariaLabel","wrapperStyle","wrapperClass","loadingStatus"],"sourceRoot":""}